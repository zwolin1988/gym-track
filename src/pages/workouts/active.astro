---
import Layout from "@/layouts/Layout.astro";
import { ActiveWorkoutContainer } from "@/components/workouts/ActiveWorkoutContainer";
import type { WorkoutDetailDTO } from "@/types";

export const prerender = false;

const user = Astro.locals.user;

if (!user) {
  return Astro.redirect("/auth/login");
}

// Pobierz aktywny trening z bazy danych
const { data: activeWorkout, error } = await Astro.locals.supabase
  .from("workouts")
  .select(
    `
    *,
    plan:workout_plans!inner(name),
    exercises:workout_exercises(
      id,
      exercise_id,
      order_index,
      created_at,
      exercise:exercises!inner(
        id,
        name,
        image_path
      ),
      sets:workout_sets(
        id,
        planned_reps,
        planned_weight,
        actual_reps,
        actual_weight,
        completed,
        note,
        order_index,
        created_at
      )
    )
  `
  )
  .eq("status", "active")
  .single();

// JeÅ›li nie ma aktywnego treningu, przekieruj do listy planÃ³w
if (error || !activeWorkout) {
  return Astro.redirect("/workout-plans");
}

// Transformuj dane do WorkoutDetailDTO
const workoutData: WorkoutDetailDTO = {
  id: activeWorkout.id,
  plan_id: activeWorkout.plan_id,
  status: activeWorkout.status,
  started_at: activeWorkout.started_at,
  completed_at: activeWorkout.completed_at,
  created_at: activeWorkout.created_at,
  plan_name: activeWorkout.plan.name,
  exercises: activeWorkout.exercises
    .map((ex) => ({
      id: ex.id,
      exercise_id: ex.exercise_id,
      order_index: ex.order_index,
      created_at: ex.created_at,
      exercise: {
        id: ex.exercise.id,
        name: ex.exercise.name,
        image_path: ex.exercise.image_path,
      },
      sets: ex.sets
        .sort((a, b) => a.order_index - b.order_index)
        .map((set) => ({
          id: set.id,
          planned_reps: set.planned_reps,
          planned_weight: set.planned_weight,
          actual_reps: set.actual_reps,
          actual_weight: set.actual_weight,
          completed: set.completed,
          note: set.note,
          order_index: set.order_index,
          created_at: set.created_at,
        })),
    }))
    .sort((a, b) => a.order_index - b.order_index),
};
---

<Layout title="Aktywny Trening - Gym Track">
  <ActiveWorkoutContainer initialWorkout={workoutData} client:load />
</Layout>
