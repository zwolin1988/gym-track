---
import Layout from "@/layouts/Layout.astro";
import { CategoriesHeader } from "@/components/categories/CategoriesHeader";
import { CategoriesGrid } from "@/components/categories/CategoriesGrid";
import type { CategoryWithExerciseCountViewModel } from "@/components/categories/types";

export const prerender = false;

// Sprawdź autoryzację
const user = Astro.locals.user;

if (!user) {
  return Astro.redirect("/auth/login");
}

// Pobierz dane kategorii z Supabase z liczbą ćwiczeń
const { data: categoriesRaw, error } = await Astro.locals.supabase
  .from("categories")
  .select(
    `
    *,
    exercises:exercises(count)
  `
  )
  .order("order_index", { ascending: true });

// Obsługa błędu
if (error) {
  // eslint-disable-next-line no-console
  console.error("Error fetching categories:", error);
  return Astro.redirect("/error?message=" + encodeURIComponent("Nie udało się załadować kategorii"));
}

// Transformacja danych do ViewModel
const categories: CategoryWithExerciseCountViewModel[] = (categoriesRaw || []).map(
  (cat: { exercises?: { count: number }[] } & CategoryWithExerciseCountViewModel["category"]) => ({
    category: {
      id: cat.id,
      name: cat.name,
      slug: cat.slug,
      description: cat.description,
      image_path: cat.image_path,
      image_alt: cat.image_alt,
      order_index: cat.order_index,
      created_at: cat.created_at,
    },
    exerciseCount: cat.exercises?.[0]?.count || 0,
  })
);

const totalCategories = categories.length;
---

<Layout title="Kategorie ćwiczeń - Gym Track">
  <main class="container mx-auto max-w-7xl px-4 py-8 sm:px-6 lg:px-8">
    <CategoriesHeader totalCategories={totalCategories} client:load />
    <CategoriesGrid categories={categories} client:load />
  </main>
</Layout>
